{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_HOSTELS, GET_HOSTEL, DELETE_HOSTEL } from \"./types\";\nexport const createHostel = (hostel, history) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8080/api/hostel', hostel);\n    history.push(\"/wardenDashboard\");\n    console.log(\"hostel\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getHostels = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/hostels`);\n    dispatch({\n      type: GET_HOSTELS,\n      payload: res.data\n    });\n  } catch (error) {//history.push('/dashboard');\n  }\n};\nexport const getHostel = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/hostel/${id}`);\n    dispatch({\n      type: GET_HOSTEL,\n      payload: res.data\n    });\n  } catch (error) {//history.push(\"/wardenDashboard\");\n  }\n};\nexport const updateHostel = (hostel, history) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:8080/api/hostel', hostel);\n    history.push(\"/wardenDashboard\");\n    console.log(\"hostel\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteHostel = (id, history) => async dispatch => {\n  if (window.confirm(\"Are you sure? This will delete the hostel and all the data related to it\")) await axios.delete(`http://localhost:8080/api/hostel/${id}`);\n  dispatch({\n    type: DELETE_HOSTEL,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/venus/Downloads/hostel-react-master/src/actions/hostelActions.js"],"names":["axios","GET_ERRORS","GET_HOSTELS","GET_HOSTEL","DELETE_HOSTEL","createHostel","hostel","history","dispatch","res","post","push","console","log","err","type","payload","response","data","getHostels","id","get","error","getHostel","updateHostel","put","deleteHostel","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAoBC,WAApB,EAAgCC,UAAhC,EAA2CC,aAA3C,QAAgE,SAAhE;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA+CJ,MAA/C,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,kBAAb;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAE,CAACC,EAAD,EAAIb,OAAJ,KAAgB,MAAMC,QAAN,IAAkB;AACzD,MAAG;AACD,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACqB,GAAN,CAAW,mCAAX,CAAlB;AACFb,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAACb,WADE;AAEPc,MAAAA,OAAO,EAAEP,GAAG,CAACS;AAFN,KAAD,CAAR;AAID,GANC,CAOF,OAAMI,KAAN,EAAY,CACV;AACD;AACE,CAXI;AAaL,OAAO,MAAMC,SAAS,GAAE,CAACH,EAAD,EAAKb,OAAL,KAAiB,MAAMC,QAAN,IAAkB;AACzD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACqB,GAAN,CAAW,oCAAmCD,EAAG,EAAjD,CAAlB;AACFZ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAACZ,UADE;AAEPa,MAAAA,OAAO,EAAEP,GAAG,CAACS;AAFN,KAAD,CAAR;AAIC,GAND,CAME,OAAOI,KAAP,EAAc,CACd;AACD;AAEF,CAXM;AAaP,OAAO,MAAME,YAAY,GAAG,CAAClB,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACyB,GAAN,CAAU,kCAAV,EAA8CnB,MAA9C,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,kBAAb;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAXM;AAYP,OAAO,MAAMQ,YAAY,GAAE,CAACN,EAAD,EAAIb,OAAJ,KAAiB,MAAMC,QAAN,IAAkB;AAE5D,MACEmB,MAAM,CAACC,OAAP,CACE,0EADF,CADF,EAMA,MAAM5B,KAAK,CAAC6B,MAAN,CAAc,oCAAmCT,EAAG,EAApD,CAAN;AACAZ,EAAAA,QAAQ,CAAC;AAEPO,IAAAA,IAAI,EAACX,aAFE;AAGPY,IAAAA,OAAO,EAAEI;AAHF,GAAD,CAAR;AAMD,CAfM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS,GET_HOSTELS,GET_HOSTEL,DELETE_HOSTEL } from \"./types\";\n\nexport const createHostel = (hostel, history) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8080/api/hostel', hostel);\n    history.push(\"/wardenDashboard\");\n      console.log(\"hostel\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  } \n};\n\nexport const getHostels =(id,history) => async dispatch => {\n  try{\n    const res = await axios.get(`http://localhost:8080/api/hostels`);\n  dispatch({\n    type:GET_HOSTELS,\n    payload: res.data\n  });\n}\ncatch(error){\n  //history.push('/dashboard');\n}\n  }; \n\n  export const getHostel =(id, history) => async dispatch => {\n    try {\n      const res = await axios.get(`http://localhost:8080/api/hostel/${id}`);\n    dispatch({\n      type:GET_HOSTEL,\n      payload: res.data\n    });\n    } catch (error) {\n      //history.push(\"/wardenDashboard\");\n    }\n    \n  };\n\n  export const updateHostel = (hostel, history) => async dispatch => {\n    try {\n      const res = await axios.put('http://localhost:8080/api/hostel', hostel);\n      history.push(\"/wardenDashboard\");\n        console.log(\"hostel\");\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } \n  };\n  export const deleteHostel =(id,history)  => async dispatch => {\n\n    if (\n      window.confirm(\n        \"Are you sure? This will delete the hostel and all the data related to it\"\n      )\n    ) \n  \n    await axios.delete(`http://localhost:8080/api/hostel/${id}`);\n    dispatch({\n    \n      type:DELETE_HOSTEL,\n      payload: id\n    });\n    \n  }\n  \n  "]},"metadata":{},"sourceType":"module"}