{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_WARDEN, GET_WARDENS, DELETE_WARDEN } from \"./types\";\nexport const createWarden = (warden, history) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8080/api/warden', warden);\n    history.push(\"/adminDashboard\");\n    console.log(\"warden\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getWardens = () => async dispatch => {\n  const res = await axios.get('http://localhost:8080/api/wardens');\n  dispatch({\n    type: GET_WARDENS,\n    payload: res.data\n  });\n};\nexport const getWarden = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/warden/${id}`);\n    dispatch({\n      type: GET_WARDEN,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/adminDashboard\");\n  }\n};\nexport const updateWarden = (warden, history) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:8080/api/warden', warden);\n    history.push(\"/adminDashboard\");\n    console.log(\"warden\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteWarden = (id, history) => async dispatch => {\n  if (window.confirm(\"Are you sure? This will delete the warden and all the data related to it\")) await axios.delete(`http://localhost:8080/api/warden/${id}`);\n  dispatch({\n    type: DELETE_WARDEN,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/venus/Downloads/hostel-react-master/src/actions/wardenActions.js"],"names":["axios","GET_ERRORS","GET_WARDEN","GET_WARDENS","DELETE_WARDEN","createWarden","warden","history","dispatch","res","post","push","console","log","err","type","payload","response","data","getWardens","get","getWarden","id","error","updateWarden","put","deleteWarden","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAoBC,UAApB,EAA+BC,WAA/B,EAA2CC,aAA3C,QAAgE,SAAhE;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA+CJ,MAA/C,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,iBAAb;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAE,MAAM,MAAMX,QAAN,IAAkB;AACjD,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAACoB,GAAN,CAAU,mCAAV,CAAlB;AACAZ,EAAAA,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAACZ,WADE;AAEPa,IAAAA,OAAO,EAAEP,GAAG,CAACS;AAFN,GAAD,CAAR;AAIC,CANM;AAQP,OAAO,MAAMG,SAAS,GAAE,CAACC,EAAD,EAAIf,OAAJ,KAAe,MAAMC,QAAN,IAAiB;AACtD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACoB,GAAN,CAAW,oCAAmCE,EAAG,EAAjD,CAAlB;AACFd,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAACb,UADE;AAEPc,MAAAA,OAAO,EAAEP,GAAG,CAACS;AAFN,KAAD,CAAR;AAIC,GAND,CAME,OAAOK,KAAP,EAAc;AACdhB,IAAAA,OAAO,CAACI,IAAR,CAAa,iBAAb;AACD;AAEF,CAXM;AAaP,OAAO,MAAMa,YAAY,GAAG,CAAClB,MAAD,EAASC,OAAT,KAAqB,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACyB,GAAN,CAAU,kCAAV,EAA8CnB,MAA9C,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,iBAAb;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAXM;AAaP,OAAO,MAAMQ,YAAY,GAAE,CAACJ,EAAD,EAAIf,OAAJ,KAAiB,MAAMC,QAAN,IAAkB;AAC5D,MACEmB,MAAM,CAACC,OAAP,CACE,0EADF,CADF,EAKA,MAAM5B,KAAK,CAAC6B,MAAN,CAAc,oCAAmCP,EAAG,EAApD,CAAN;AACAd,EAAAA,QAAQ,CAAC;AAEPO,IAAAA,IAAI,EAACX,aAFE;AAGPY,IAAAA,OAAO,EAAEM;AAHF,GAAD,CAAR;AAMD,CAbM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS,GET_WARDEN,GET_WARDENS,DELETE_WARDEN } from \"./types\";\n \n\nexport const createWarden = (warden, history) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8080/api/warden', warden);\n    history.push(\"/adminDashboard\");\n      console.log(\"warden\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  } \n};\n\nexport const getWardens =() => async dispatch => {\nconst res = await axios.get('http://localhost:8080/api/wardens');\ndispatch({\n  type:GET_WARDENS,\n  payload: res.data\n});\n};\n\nexport const getWarden =(id,history) =>async dispatch=> {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/warden/${id}`);\n  dispatch({\n    type:GET_WARDEN,\n    payload: res.data\n  });\n  } catch (error) {\n    history.push(\"/adminDashboard\");\n  }\n  \n};\n\nexport const updateWarden = (warden, history) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:8080/api/warden', warden);\n    history.push(\"/adminDashboard\");\n      console.log(\"warden\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  } \n};\n\nexport const deleteWarden =(id,history)  => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the warden and all the data related to it\"\n    )\n  ) \n  await axios.delete(`http://localhost:8080/api/warden/${id}`);\n  dispatch({\n  \n    type:DELETE_WARDEN,\n    payload: id\n  });\n  \n};\n"]},"metadata":{},"sourceType":"module"}